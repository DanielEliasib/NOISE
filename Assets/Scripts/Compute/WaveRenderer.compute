// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel WaveRenderer

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

StructuredBuffer<float> _Line;

float _Width, _Height;
float _Prom, _BeatThreshold;
int _LineWidth;

[numthreads(8,8,1)]
void WaveRenderer(uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    int index = (int)((id.x / _Width)*_LineWidth);
    float pointHeight = id.y / _Height;
    
    if(abs(pointHeight - _Line[index] / 2.5f) < 0.015f)
        Result[id.xy] = float4(0.0f, 0.5f, 0.95f, 1.0f);
    else
        Result[id.xy] = float4(0.0f, 0.5f, 0.95f, 0.0f);

    if(abs(pointHeight - _Prom / 2.5f) < 0.015f)
        Result[id.xy] = float4(0.0f, 0.9f, 0.1f, 1.0f);
    
    if(abs(pointHeight - _BeatThreshold / 2.5f) < 0.015f)
        Result[id.xy] = float4(0.8f, 0.1f, 0.3f, 1.0f);
}
